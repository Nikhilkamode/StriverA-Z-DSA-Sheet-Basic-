/*Armstrong no-Armstrong Numbers are the numbers having the sum of digits raised to power no.
of digits is equal to a given number.*/
Examples- 0, 1, 153, 370, 371, 407, and 1634 are some of the Armstrong Numbers.
ex-1^3+5^3+3^3=1+125+27
              =153 

#include <bits/stdc++.h>
using namespace std;
bool ArmstrongNumber(int n)
{
    int originalno = n;
    int count = 0;
    int temp = n;
    while (temp != 0)
    {
        count++;
        temp = temp / 10;
    }
    int sumofpower = 0;
    while (n != 0)
    {
        int digit = n % 10;
        sumofpower += pow(digit,count);
        n /= 10;
    }
    return (sumofpower == originalno);
}
int main()
{
    int n1 = 153;
    if (ArmstrongNumber(n1))
    {
        cout << "Yes, it is an Armstrong Number\n";
    }
    else
    {
        cout << "No, it is not an Armstrong Number\n";
    }
    return 0;
}


/*Print all divisors of given no*/

#include<iostream>
using namespace std;
void printDivisorsBruteForce(int n){
	cout<<"The Divisors of "<<n<<" are:"<<endl;
	for(int i = 1; i <= n; i++)
		if(n % i == 0)
			cout << i << " ";	
	cout << "\n";
}	
int main(){		
	printDivisorsBruteForce(36);	
return 0;
}


/*Check if no is prime or not*/

#include<bits/stdc++.h>
using namespace std;
bool isPrime(int N) {
  for (int i = 2; i < N; i++) {
    if (N % i == 0) {
      return false;
    }
  }
  return true;
}
int main() {

  int n = 11;
  bool ans = isPrime(n);
  if (n != 1 && ans == true) {
    cout << "Prime Number";
  } else {
    cout << "Non Prime Number";
  }
  return 0;
}
